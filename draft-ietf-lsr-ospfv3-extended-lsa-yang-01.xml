<?xml version="1.0" encoding="US-ASCII"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
    <!ENTITY RFC2119 PUBLIC '' 
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml'>
    <!ENTITY RFC3688 PUBLIC '' 
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.3688.xml'>
    <!ENTITY RFC5340 PUBLIC '' 
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5340.xml'>
    <!ENTITY RFC5246 PUBLIC '' 
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.5246.xml'>
    <!ENTITY RFC6020 PUBLIC '' 
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6020.xml'>
    <!ENTITY RFC6241 PUBLIC '' 
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6241.xml'>
    <!ENTITY RFC6242 PUBLIC '' 
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6242.xml'>
    <!ENTITY RFC6536 PUBLIC '' 
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.6536.xml'>
    <!ENTITY RFC7950 PUBLIC '' 
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.7950.xml'>
    <!ENTITY RFC8022 PUBLIC '' 
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.8022.xml'>
    <!ENTITY RFC8040 PUBLIC '' 
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.8040.xml'>
    <!ENTITY RFC8349 PUBLIC '' 
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.8349.xml'>
    <!ENTITY RFC8362 PUBLIC '' 
      'http://xml.resource.org/public/rfc/bibxml/reference.RFC.8362.xml'>
    <!ENTITY I-D.ietf-ospf-yang PUBLIC '' 
      'http://xml.resource.org/public/rfc/bibxml-ids/reference.I-D.ietf-ospf-yang'>
    ]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc strict="no" ?>
<?rfc toc="yes" ?>
<?rfc symrefs="yes" ?>
<?rfc sortrefs="yes"?>

<?rfc rfcedstyle="yes" ?>
<?rfc subcompact="no" ?>

<rfc category="std" docName="draft-ietf-lsr-ospfv3-extended-lsa-yang-01" ipr="trust200902">
  <!-- category values: std, bcp, info, exp, and historic
     ipr values: full3667, noModification3667, noDerivatives3667
     you can add the attributes updates="NNNN" and obsoletes="NNNN" 
     they will automatically be output with "(if approved)" -->

  <!-- ***** FRONT MATTER ***** -->

  <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
         full title is longer than 39 characters -->

  <title abbrev="OSPFv3 Extended LSAs YANG">YANG Model for OSPFv3 Extended LSAs</title>

    <!-- add 'role="editor"' below for the editors if appropriate -->

    <!-- Another author who claims to be an editor -->

    <author fullname="Acee Lindem" initials="A." surname="Lindem">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>301 Midenhall Way</street>
          <city>Cary, NC 27513</city>
        </postal>
        <email>acee@cisco.com</email>
      </address>
    </author>
    <author fullname="Sharmila Palani" initials="S." surname="Palani">
      <organization>Cisco Systems</organization>
      <address>
        <postal>
          <street>170 West Tasman Drive</street>
          <city>San Jose, CA 95134</city>
        </postal>
        <email>shpalani@cisco.com</email>
      </address>
    </author>
    <author fullname="Yingzhen Qu" initials="Y" surname="Qu">
      <organization>Futurewei</organization>
      <address>
        <postal>
          <street>2330 Central Expressway</street>
          <city>Santa Clara</city>
          <region>CA</region>
          <code>95050</code>
          <country>USA</country>
        </postal>
        <phone></phone>
        <email>yingzhen.qu@futurewei.com</email>
      </address>
    </author>
    <date/>

    <!-- If the month and year are both specified and are the current ones, xml2rfc will fill 
         in the current day for you. If only the current year is specified, xml2rfc will fill 
   in the current day and month for you. If the year is not the current one, it is 
   necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the 
   purpose of calculating the expiry date).  With drafts it is normally sufficient to 
   specify just the year. -->

    <!-- Meta-data Declarations -->

    <area>General</area>

    <workgroup>Internet</workgroup>

    <!-- WG name at the upperleft corner of the doc,
         IETF is fine for individual submissions.  
   If this element is not present, the default is "Network Working Group",
         which is used by the RFC Editor as a nod to the history of the IETF. -->

    <!-- Keywords will be incorporated into HTML output
         files in a meta tag but they have no effect on text or nroff
         output. If you submit your draft to the RFC Editor, the
         keywords will be used for the search engine. -->

    <abstract>
      <t>This document defines a YANG data model augmenting the IETF OSPF 
      YANG model to provide support for 
      OSPFv3 Link State Advertisment (LSA) Extensibility as defined in 
      RFC 8362. OSPFv3 Extended LSAs provide extensible TLV-based LSAs for the 
      base LSA types defined in RFC 5340.</t>
    </abstract>
  </front>

  <middle>
    <section title="Overview">
      <t>YANG <xref target="RFC6020"></xref>  <xref target="RFC7950"></xref> is a 
      data definition language 
      used to define the contents of a conceptual data store 
      that allows networked devices to be managed using NETCONF 
      <xref target="RFC6241"/>.  YANG is proving relevant beyond its 
      initial confines, as bindings to other interfaces (e.g., ReST) and 
      encodings other than XML (e.g., JSON) are being defined.  Furthermore, 
      YANG data models can be used as the basis for implementation of other 
      interfaces, such as CLI and programmatic APIs.</t>

      <t>This document defines a YANG data model augmenting the IETF OSPF 
      YANG model <xref target="I-D.ietf-ospf-yang"/>, which itself augments 
      <xref target="RFC8349"/>, to provide support for configuration and
      operational state for OSPFv3 Extended LSAs as defined in
      <xref target="RFC8362"/>. 
     </t>
               
      <section title="Requirements Language">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref target="RFC2119"></xref>.</t>
      </section>
    </section>
  

  <section title="OSPFv3 Extended LSAs">

    <t>This document defines a model for the OSPFv3 Extended LSA feature. It is an
      augmentation of the OSPF base model provided support for OSPFv3 Link State
      Advertisement (LSA) Extensibility <xref target="RFC8362"/>.
      OSPFv3 Extended LSAs provide extensible TLV-based LSAs for the 
      base LSA types defined in <xref target="RFC5340"/>.</t>
    <t>The OSPFv3 Extended LSA YANG module requires support for the OSPF base
    model<xref target="I-D.ietf-ospf-yang"></xref> which defines basic OSPF
   configuration and state. The OSPF YANG model augments the ietf-routing YANG
   model defined in <xref target="RFC8022"/>.
   The augmentations defined in the ietf-ospfv3-extended-lsa YANG 
   model will provide global configuration, area configuration, and addition of OSPFv3
   Extended LSAs to the Link State Database (LSDB) operational state.</t>
    <figure align="left">
      <artwork align="left">     
module: ietf-ospfv3-extended-lsa
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/ospf:ospf:
    +--rw extended-lsa-support?   boolean {extended-lsa-support}?
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/ospf:ospf/ospf:areas/ospf:area:
    +--rw extended-lsa-support?   boolean {extended-lsa-support}?
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/ospf:ospf/ospf:areas/ospf:area
          /ospf:interfaces/ospf:interface/ospf:database
          /ospf:link-scope-lsa-type/ospf:link-scope-lsas
          /ospf:link-scope-lsa/ospf:version/ospf:ospfv3
          /ospf:ospfv3/ospf:body:
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/ospf:ospf/ospf:areas/ospf:area
          /ospf:database/ospf:area-scope-lsa-type
          /ospf:area-scope-lsas/ospf:area-scope-lsa/ospf:version
          /ospf:ospfv3/ospf:ospfv3/ospf:body:
    +--ro e-router
    |  +--ro router-bits
    |  |  +--ro rtr-lsa-bits*   identityref
    |  +--ro lsa-options
    |  |  +--ro lsa-options*   identityref
    |  +--ro e-router-tlvs*
    |     +--ro unknown-tlv
    |     |  +--ro type?     uint16
    |     |  +--ro length?   uint16
    |     |  +--ro value?    yang:hex-string
    |     +--ro link-tlv
    |        +--ro link-tlv-length?         uint16
    |        +--ro interface-id?            uint32
    |        +--ro neighbor-interface-id?   uint32
    |        +--ro neighbor-router-id?      rt-types:router-id
    |        +--ro type?                    uint8
    |        +--ro metric?                  uint16
    |        +--ro sub-tlvs*
    |           +--ro unknown-sub-tlv
    |              +--ro type?     uint16
    |              +--ro length?   uint16
    |              +--ro value?    yang:hex-string
    +--ro e-network
    |  +--ro lsa-options
    |  |  +--ro lsa-options*   identityref
    |  +--ro e-network-tlvs*
    |     +--ro unknown--tlv
    |     |  +--ro type?     uint16
    |     |  +--ro length?   uint16
    |     |  +--ro value?    yang:hex-string
    |     +--ro attached-router-tlv
    |        +--ro attached-router-tlv-length?    uint16
    |        +--ro Adjacent-neighbor-router-id?   rt-types:router-id
    |        +--ro sub-tlvs*
    |           +--ro unknown-sub-tlv
    |              +--ro type?     uint16
    |              +--ro length?   uint16
    |              +--ro value?    yang:hex-string
    +--ro e-inter-area-prefix
    |  +--ro e-inter-prefix-tlvs*
    |     +--ro unknown--tlv
    |     |  +--ro type?     uint16
    |     |  +--ro length?   uint16
    |     |  +--ro value?    yang:hex-string
    |     +--ro inter-prefix-tlv
    |        +--ro inter-prefix-tlv-length?   uint16
    |        +--ro metric?                    rt-types:uint24
    |        +--ro prefix?                    inet:ip-prefix
    |        +--ro prefix-options
    |        |  +--ro prefix-options*   identityref
    |        +--ro prefix-length?             uint8
    |        +--ro sub-tlvs*
    |           +--ro unknown-sub-tlv
    |              +--ro type?     uint16
    |              +--ro length?   uint16
    |              +--ro value?    yang:hex-string
    +--ro e-inter-area-router
    |  +--ro e-inter-router-tlvs*
    |     +--ro unknown-tlv
    |     |  +--ro type?     uint16
    |     |  +--ro length?   uint16
    |     |  +--ro value?    yang:hex-string
    |     +--ro inter-router-tlv
    |        +--ro inter-router-tlv-length?   uint16
    |        +--ro router-bits
    |        |  +--ro rtr-lsa-bits*   identityref
    |        +--ro lsa-options
    |        |  +--ro lsa-options*   identityref
    |        +--ro metric?                    rt-types:uint24
    |        +--ro destination-router-id?     rt-types:router-id
    |        +--ro sub-tlvs*
    |           +--ro unknown-sub-tlv
    |              +--ro type?     uint16
    |              +--ro length?   uint16
    |              +--ro value?    yang:hex-string
    +--ro e-as-external
    |  +--ro e-external-tlvs*
    |     +--ro unknown-tlv
    |     |  +--ro type?     uint16
    |     |  +--ro length?   uint16
    |     |  +--ro value?    yang:hex-string
    |     +--ro external-prefix-tlv
    |        +--ro external-prefix-tlv-length?   uint16
    |        +--ro flags
    |        |  +--ro ospfv3-e-external-prefix-bits*   identityref
    |        +--ro metric?                       rt-types:uint24
    |        +--ro prefix?                       inet:ip-prefix
    |        +--ro prefix-options
    |        |  +--ro prefix-options*   identityref
    |        +--ro prefix-length?                uint8
    |        +--ro sub-tlvs*
    |           +--ro unknown-sub-tlv
    |           |  +--ro type?     uint16
    |           |  +--ro length?   uint16
    |           |  +--ro value?    yang:hex-string
    |           +--ro ipv6-fwd-addr-sub-tlv
    |           |  +--ro ipv6-fwd-addr-sub-tlv-length?   uint16
    |           |  +--ro forwarding-address?             inet:ipv6-address
    |           +--ro ipv4-fwd-addr-sub-tlv
    |           |  +--ro ipv4-fwd-addr-sub-tlv-length?   uint16
    |           |  +--ro forwarding-address?             inet:ipv4-address
    |           +--ro route-tag-sub-tlv
    |              +--ro route-tag-sub-tlv-length?   uint16
    |              +--ro route-tag?                  uint32
    +--ro e-nssa
    |  +--ro e-external-tlvs*
    |     +--ro unknown-tlv
    |     |  +--ro type?     uint16
    |     |  +--ro length?   uint16
    |     |  +--ro value?    yang:hex-string
    |     +--ro external-prefix-tlv
    |        +--ro external-prefix-tlv-length?   uint16
    |        +--ro flags
    |        |  +--ro ospfv3-e-external-prefix-bits*   identityref
    |        +--ro metric?                       rt-types:uint24
    |        +--ro prefix?                       inet:ip-prefix
    |        +--ro prefix-options
    |        |  +--ro prefix-options*   identityref
    |        +--ro prefix-length?                uint8
    |        +--ro sub-tlvs*
    |           +--ro unknown-sub-tlv
    |           |  +--ro type?     uint16
    |           |  +--ro length?   uint16
    |           |  +--ro value?    yang:hex-string
    |           +--ro ipv6-fwd-addr-sub-tlv
    |           |  +--ro ipv6-fwd-addr-sub-tlv-length?   uint16
    |           |  +--ro forwarding-address?             inet:ipv6-address
    |           +--ro ipv4-fwd-addr-sub-tlv
    |           |  +--ro ipv4-fwd-addr-sub-tlv-length?   uint16
    |           |  +--ro forwarding-address?             inet:ipv4-address
    |           +--ro route-tag-sub-tlv
    |              +--ro route-tag-sub-tlv-length?   uint16
    |              +--ro route-tag?                  uint32
    +--ro e-link
    |  +--ro rtr-priority?   uint8
    |  +--ro lsa-options
    |  |  +--ro lsa-options*   identityref
    |  +--ro e-link-tlvs*
    |     +--ro unknown-tlv
    |     |  +--ro type?     uint16
    |     |  +--ro length?   uint16
    |     |  +--ro value?    yang:hex-string
    |     +--ro intra-prefix-tlv
    |     |  +--ro intra-prefix-tlv-length?   uint16
    |     |  +--ro metric?                    rt-types:uint24
    |     |  +--ro prefix?                    inet:ip-prefix
    |     |  +--ro prefix-options
    |     |  |  +--ro prefix-options*   identityref
    |     |  +--ro prefix-length?             uint8
    |     |  +--ro sub-tlvs*
    |     |     +--ro unknown-sub-tlv
    |     |        +--ro type?     uint16
    |     |        +--ro length?   uint16
    |     |        +--ro value?    yang:hex-string
    |     +--ro ipv6-link-local-tlv
    |     |  +--ro ipv6-link-local-tlv-length?   uint16
    |     |  +--ro link-local-address?           inet:ipv6-address
    |     |  +--ro sub-tlvs*
    |     |     +--ro unknown-sub-tlv
    |     |        +--ro type?     uint16
    |     |        +--ro length?   uint16
    |     |        +--ro value?    yang:hex-string
    |     +--ro ipv4-link-local-tlv
    |        +--ro ipv4-link-local-tlv-length?   uint16
    |        +--ro link-local-address?           inet:ipv4-address
    |        +--ro sub-tlvs*
    |           +--ro unknown-sub-tlv
    |              +--ro type?     uint16
    |              +--ro length?   uint16
    |              +--ro value?    yang:hex-string
    +--ro e-intra-area-prefix
       +--ro referenced-ls-type?         uint16
       +--ro referenced-link-state-id?   uint32
       +--ro referenced-adv-router?      rt-types:router-id
       +--ro e-intra-prefix-tlvs*
          +--ro unknown-tlv
          |  +--ro type?     uint16
          |  +--ro length?   uint16
          |  +--ro value?    yang:hex-string
          +--ro intra-prefix-tlv
             +--ro intra-prefix-tlv-length?   uint16
             +--ro metric?                    rt-types:uint24
             +--ro prefix?                    inet:ip-prefix
             +--ro prefix-options
             |  +--ro prefix-options*   identityref
             +--ro prefix-length?             uint8
             +--ro sub-tlvs*
                +--ro unknown-sub-tlv
                   +--ro type?     uint16
                   +--ro length?   uint16
                   +--ro value?    yang:hex-string
  augment /rt:routing/rt:control-plane-protocols
          /rt:control-plane-protocol/ospf:ospf/ospf:database
          /ospf:as-scope-lsa-type/ospf:as-scope-lsas
          /ospf:as-scope-lsa/ospf:version/ospf:ospfv3
          /ospf:ospfv3/ospf:body:
    +--ro e-router
    |  +--ro router-bits
    |  |  +--ro rtr-lsa-bits*   identityref
    |  +--ro lsa-options
    |  |  +--ro lsa-options*   identityref
    |  +--ro e-router-tlvs*
    |     +--ro unknown-tlv
    |     |  +--ro type?     uint16
    |     |  +--ro length?   uint16
    |     |  +--ro value?    yang:hex-string
    |     +--ro link-tlv
    |        +--ro link-tlv-length?         uint16
    |        +--ro interface-id?            uint32
    |        +--ro neighbor-interface-id?   uint32
    |        +--ro neighbor-router-id?      rt-types:router-id
    |        +--ro type?                    uint8
    |        +--ro metric?                  uint16
    |        +--ro sub-tlvs*
    |           +--ro unknown-sub-tlv
    |              +--ro type?     uint16
    |              +--ro length?   uint16
    |              +--ro value?    yang:hex-string
    +--ro e-network
    |  +--ro lsa-options
    |  |  +--ro lsa-options*   identityref
    |  +--ro e-network-tlvs*
    |     +--ro unknown--tlv
    |     |  +--ro type?     uint16
    |     |  +--ro length?   uint16
    |     |  +--ro value?    yang:hex-string
    |     +--ro attached-router-tlv
    |        +--ro attached-router-tlv-length?    uint16
    |        +--ro Adjacent-neighbor-router-id?   rt-types:router-id
    |        +--ro sub-tlvs*
    |           +--ro unknown-sub-tlv
    |              +--ro type?     uint16
    |              +--ro length?   uint16
    |              +--ro value?    yang:hex-string
    +--ro e-inter-area-prefix
    |  +--ro e-inter-prefix-tlvs*
    |     +--ro unknown--tlv
    |     |  +--ro type?     uint16
    |     |  +--ro length?   uint16
    |     |  +--ro value?    yang:hex-string
    |     +--ro inter-prefix-tlv
    |        +--ro inter-prefix-tlv-length?   uint16
    |        +--ro metric?                    rt-types:uint24
    |        +--ro prefix?                    inet:ip-prefix
    |        +--ro prefix-options
    |        |  +--ro prefix-options*   identityref
    |        +--ro prefix-length?             uint8
    |        +--ro sub-tlvs*
    |           +--ro unknown-sub-tlv
    |              +--ro type?     uint16
    |              +--ro length?   uint16
    |              +--ro value?    yang:hex-string
    +--ro e-inter-area-router
    |  +--ro e-inter-router-tlvs*
    |     +--ro unknown-tlv
    |     |  +--ro type?     uint16
    |     |  +--ro length?   uint16
    |     |  +--ro value?    yang:hex-string
    |     +--ro inter-router-tlv
    |        +--ro inter-router-tlv-length?   uint16
    |        +--ro router-bits
    |        |  +--ro rtr-lsa-bits*   identityref
    |        +--ro lsa-options
    |        |  +--ro lsa-options*   identityref
    |        +--ro metric?                    rt-types:uint24
    |        +--ro destination-router-id?     rt-types:router-id
    |        +--ro sub-tlvs*
    |           +--ro unknown-sub-tlv
    |              +--ro type?     uint16
    |              +--ro length?   uint16
    |              +--ro value?    yang:hex-string
    +--ro e-as-external
    |  +--ro e-external-tlvs*
    |     +--ro unknown-tlv
    |     |  +--ro type?     uint16
    |     |  +--ro length?   uint16
    |     |  +--ro value?    yang:hex-string
    |     +--ro external-prefix-tlv
    |        +--ro external-prefix-tlv-length?   uint16
    |        +--ro flags
    |        |  +--ro ospfv3-e-external-prefix-bits*   identityref
    |        +--ro metric?                       rt-types:uint24
    |        +--ro prefix?                       inet:ip-prefix
    |        +--ro prefix-options
    |        |  +--ro prefix-options*   identityref
    |        +--ro prefix-length?                uint8
    |        +--ro sub-tlvs*
    |           +--ro unknown-sub-tlv
    |           |  +--ro type?     uint16
    |           |  +--ro length?   uint16
    |           |  +--ro value?    yang:hex-string
    |           +--ro ipv6-fwd-addr-sub-tlv
    |           |  +--ro ipv6-fwd-addr-sub-tlv-length?   uint16
    |           |  +--ro forwarding-address?             inet:ipv6-address
    |           +--ro ipv4-fwd-addr-sub-tlv
    |           |  +--ro ipv4-fwd-addr-sub-tlv-length?   uint16
    |           |  +--ro forwarding-address?             inet:ipv4-address
    |           +--ro route-tag-sub-tlv
    |              +--ro route-tag-sub-tlv-length?   uint16
    |              +--ro route-tag?                  uint32
    +--ro e-nssa
    |  +--ro e-external-tlvs*
    |     +--ro unknown-tlv
    |     |  +--ro type?     uint16
    |     |  +--ro length?   uint16
    |     |  +--ro value?    yang:hex-string
    |     +--ro external-prefix-tlv
    |        +--ro external-prefix-tlv-length?   uint16
    |        +--ro flags
    |        |  +--ro ospfv3-e-external-prefix-bits*   identityref
    |        +--ro metric?                       rt-types:uint24
    |        +--ro prefix?                       inet:ip-prefix
    |        +--ro prefix-options
    |        |  +--ro prefix-options*   identityref
    |        +--ro prefix-length?                uint8
    |        +--ro sub-tlvs*
    |           +--ro unknown-sub-tlv
    |           |  +--ro type?     uint16
    |           |  +--ro length?   uint16
    |           |  +--ro value?    yang:hex-string
    |           +--ro ipv6-fwd-addr-sub-tlv
    |           |  +--ro ipv6-fwd-addr-sub-tlv-length?   uint16
    |           |  +--ro forwarding-address?             inet:ipv6-address
    |           +--ro ipv4-fwd-addr-sub-tlv
    |           |  +--ro ipv4-fwd-addr-sub-tlv-length?   uint16
    |           |  +--ro forwarding-address?             inet:ipv4-address
    |           +--ro route-tag-sub-tlv
    |              +--ro route-tag-sub-tlv-length?   uint16
    |              +--ro route-tag?                  uint32
    +--ro e-link
    |  +--ro rtr-priority?   uint8
    |  +--ro lsa-options
    |  |  +--ro lsa-options*   identityref
    |  +--ro e-link-tlvs*
    |     +--ro unknown-tlv
    |     |  +--ro type?     uint16
    |     |  +--ro length?   uint16
    |     |  +--ro value?    yang:hex-string
    |     +--ro intra-prefix-tlv
    |     |  +--ro intra-prefix-tlv-length?   uint16
    |     |  +--ro metric?                    rt-types:uint24
    |     |  +--ro prefix?                    inet:ip-prefix
    |     |  +--ro prefix-options
    |     |  |  +--ro prefix-options*   identityref
    |     |  +--ro prefix-length?             uint8
    |     |  +--ro sub-tlvs*
    |     |     +--ro unknown-sub-tlv
    |     |        +--ro type?     uint16
    |     |        +--ro length?   uint16
    |     |        +--ro value?    yang:hex-string
    |     +--ro ipv6-link-local-tlv
    |     |  +--ro ipv6-link-local-tlv-length?   uint16
    |     |  +--ro link-local-address?           inet:ipv6-address
    |     |  +--ro sub-tlvs*
    |     |     +--ro unknown-sub-tlv
    |     |        +--ro type?     uint16
    |     |        +--ro length?   uint16
    |     |        +--ro value?    yang:hex-string
    |     +--ro ipv4-link-local-tlv
    |        +--ro ipv4-link-local-tlv-length?   uint16
    |        +--ro link-local-address?           inet:ipv4-address
    |        +--ro sub-tlvs*
    |           +--ro unknown-sub-tlv
    |              +--ro type?     uint16
    |              +--ro length?   uint16
    |              +--ro value?    yang:hex-string
    +--ro e-intra-area-prefix
       +--ro referenced-ls-type?         uint16
       +--ro referenced-link-state-id?   uint32
       +--ro referenced-adv-router?      rt-types:router-id
       +--ro e-intra-prefix-tlvs*
          +--ro unknown-tlv
          |  +--ro type?     uint16
          |  +--ro length?   uint16
          |  +--ro value?    yang:hex-string
          +--ro intra-prefix-tlv
             +--ro intra-prefix-tlv-length?   uint16
             +--ro metric?                    rt-types:uint24
             +--ro prefix?                    inet:ip-prefix
             +--ro prefix-options
             |  +--ro prefix-options*   identityref
             +--ro prefix-length?             uint8
             +--ro sub-tlvs*
                +--ro unknown-sub-tlv
                   +--ro type?     uint16
                   +--ro length?   uint16
                   +--ro value?    yang:hex-string
      </artwork>
    </figure>         
  </section>
  

  <section title="OSPFv3 Extended LSA Yang Module">
  <t>
    <figure>
      <artwork><![CDATA[
<CODE BEGINS> file "ietf-ospfv3-extended-lsa@2020-02-24.yang"
module ietf-ospfv3-extended-lsa {
  yang-version 1.1;
  namespace
   "urn:ietf:params:xml:ns:yang:ietf-ospfv3-extended-lsa";

  prefix ospfv3-e-lsa;

  import ietf-routing-types {
    prefix "rt-types";
  }

  import ietf-inet-types {
    prefix "inet";
    reference "RFC 6021 - Common YANG Data Types";
  }

  import ietf-routing {
    prefix "rt";
    reference "RFC 8349 - A YANG Data Model for Routing
               Management (NMDA Version)";
  }

  import ietf-ospf {
    prefix "ospf";
    reference "RFC XXXX - A YANG Data Model for OSPF
               Protocol";
  }

  organization
    "IETF LSR - Link State Routing Working Group";

  contact
     "WG Web:   <http://tools.ietf.org/wg/lsr/>
      WG List:  <mailto:lsr@ietf.org>

      Author:   Acee Lindem
                <mailto:acee@cisco.com>
      Author:   Sharmila Palani
                <mailto:shpalani@cisco.com>
      Author:   Yingzhen Qu
                <mailto:yingzhen.qu@futurewei.com>";

  description
    "This YANG module defines the configuration
     and operational state for OSPFv3 Extended LSAs, which is
     common across all of the vendor implementations.

     Copyright (c) 2019 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (http://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX;
     see the RFC itself for full legal notices.";

  reference "RFC XXXX";
  revision 2020-04-24 {
    description
      "Initial revision.";
    reference
      "RFC XXXX: A YANG Data Model for OSPFv3 Extended LSAs.";
  }

  feature extended-lsa-support {
    description
      "Support for OSPFv3 Extended LSAs";
    reference
       "RFC 8362 - OSPFv3 Link State Advertisement (LSA)
        Extensibility";
  }

  /*
   * OSPFv3 Extend LSA Type Identities
   */
  identity ospfv3-e-router-lsa {
    base ospf:ospfv3-lsa-type;
    description
      "OSPFv3 Extended Router LSA - Type 0xA021";
  }

  identity ospfv3-e-network-lsa {
    base ospf:ospfv3-lsa-type;
    description
      "OSPFv3 Extended Network LSA - Type 0xA022";
  }

  identity ospfv3-e-summary-lsa-type {
    base ospf:ospfv3-lsa-type;
    description
      "OSPFv3 Extended Summary LSA types";
  }

  identity ospfv3-e-inter-area-prefix-lsa {
    base ospfv3-e-summary-lsa-type;
    description
      "OSPFv3 Extended Inter-area Prefix LSA - Type 0xA023";
  }

  identity ospfv3-e-inter-area-router-lsa {
    base ospfv3-e-summary-lsa-type;
    description
      "OSPFv3 Exteneded Inter-area Router LSA - Type 0xA024";
  }

  identity ospfv3-e-external-lsa-type {
    base ospf:ospfv3-lsa-type;
    description
      "OSPFv3 Extended External LSA types";
  }

  identity ospfv3-e-as-external-lsa {
    base ospfv3-e-external-lsa-type;
    description
      "OSPFv3 Extended AS-External LSA - Type 0xC025";
  }

  identity ospfv3-e-nssa-lsa {
    base ospfv3-e-external-lsa-type;
    description
      "OSPFv3 Extended Not-So-Stubby-Area (NSSA) LSA -
       Type 0xA027";
  }

  identity ospfv3-e-link-lsa {
    base ospf:ospfv3-lsa-type;
    description
      "OSPFv3 Extended Link LSA - Type 0x8028";
  }

  identity ospfv3-e-intra-area-prefix-lsa {
    base ospf:ospfv3-lsa-type;
    description
      "OSPFv3 Extended Intra-area Prefix LSA - Type 0xA029";
  }

  identity ospfv3-e-prefix-option {
    description
      "Base identity for OSPFv3 Prefix Options.";
  }

  identity nu-bit {
    base ospfv3-e-prefix-option;
    description
      "When set, the prefix should be excluded
       from IPv6 unicast calculations.";
  }

  identity la-bit {
    base ospfv3-e-prefix-option;
    description
      "When set, the prefix is actually an IPv6 interface
       address of the Advertising Router.";
  }

  identity p-bit {
    base ospfv3-e-prefix-option;
    description
      "When set, the NSSA area prefix should be
       translated to an AS External LSA and advertised
       by the translating NSSA Border Router.";
  }

  identity dn-bit {
    base ospfv3-e-prefix-option;
    description
      "When set, the inter-area-prefix LSA or
       AS-external LSA prefix has been advertised as an
       L3VPN prefix.";
  }

  identity ospfv3-e-external-prefix-option {
    description
      "Base identity for OSPFv3 External Prefix Options.";
  }

  identity e-bit {
    base ospfv3-e-external-prefix-option;
    description
      "When set, the metric specified is a Type 2
       external metric.";
  }

  grouping unknown-sub-tlv {
    description
      "Unknown TLV grouping";
    container unknown-sub-tlv {
      uses ospf:tlv;
      description "Unknown External TLV Sub-TLV";
    }
  }

  grouping ospfv3-lsa-prefix {
    description
      "OSPFv3 LSA prefix";

    leaf prefix {
      type inet:ip-prefix;
      description
        "LSA Prefix";
    }
    container prefix-options {
      leaf-list prefix-options {
        type identityref {
          base ospfv3-e-prefix-option;
        }
        description
          "OSPFv3 prefix option flag list. This list will
           contain the identities for the OSPFv3 options
           that are set for the OSPFv3 prefix.";
      }
      description "Prefix options.";
    }

    leaf prefix-length {
      type uint8 {
        range "0..128";
      }
      description "Prefix length.";
    }
  }

  grouping ipv6-fwd-addr-sub-tlv {
    container ipv6-fwd-addr-sub-tlv {
      description
        "IPv6 Forwarding Address Sub-TLV";
      leaf ipv6-fwd-addr-sub-tlv-length {
        type uint16;
        description
          "IPv6 Forwarding Addrss Sub-TLV Length - 16
           for IPv6 address";
      }
      leaf forwarding-address {
        type inet:ipv6-address;
        description
          "Forwarding address";
      }
    }
    description
      "IPv6 Forwarding Address Sub-TLV grouping";
  }

  grouping ipv4-fwd-addr-sub-tlv {
    container ipv4-fwd-addr-sub-tlv {
      description
        "IPv4 Forwarding Address Sub-TLV";
      leaf ipv4-fwd-addr-sub-tlv-length {
        type uint16;
        description
          "IPv4 Forwarding Addrss Sub-TLV Length - 4
           for IPv4 address";
      }
      leaf forwarding-address {
        type inet:ipv4-address;
        description
          "Forwarding address";
      }
    }
    description
      "IPv4 Forwarding Address Sub-TLV grouping";
  }

  grouping route-tag-sub-tlv {
    container route-tag-sub-tlv {
      description
        "Route Tag Sub-TLV";
      leaf route-tag-sub-tlv-length {
        type uint16;
        description
          "Route Tag Sub-TLV Length - 4 for 32-bit tag";
      }
      leaf route-tag {
        type uint32;
        description
          "Route Tag";
      }
    }
    description
      "Route Tag Sub-TLV grouping";
  }

  grouping external-prefix-tlv {
    container external-prefix-tlv {
      description "External Prefix LSA TLV";
      leaf external-prefix-tlv-length {
        type uint16;
        description
          "External Prefix TLV Length - Variable dependent
               on sub-TLVs";
      }
      container flags {
        leaf-list ospfv3-e-external-prefix-bits {
          type identityref {
            base ospfv3-e-external-prefix-option;
          }
          description "OSPFv3 exernal-prefix TLV bits list.";
        }
        description "External Prefix Flags";
      }
      leaf metric {
        type rt-types:uint24;
        description "External Prefix Metric";
      }
      uses ospfv3-lsa-prefix;
      list sub-tlvs {
        description "External Prefix TLV Sub-TLVs";
        uses unknown-sub-tlv;
        uses ipv6-fwd-addr-sub-tlv;
        uses ipv4-fwd-addr-sub-tlv;
        uses route-tag-sub-tlv;
      }
    }
    description "External Prefix TLV Grouping";
  }

  grouping intra-area-prefix-tlv {
    container intra-prefix-tlv {
      description "Intra-Area Prefix LSA TLV";
      leaf intra-prefix-tlv-length {
        type uint16;
        description
          "Intra-Area Prefix TLV Length - Variable dependent
           on sub-TLVs";
      }
      leaf metric {
        type rt-types:uint24;
        description "Intra-Area Prefix Metric";
      }
      uses ospfv3-lsa-prefix;
      list sub-tlvs {
        description "Intra-Area Prefix TLV Sub-TLVs";
        uses unknown-sub-tlv;
      }
    }
    description "Intra-Area Prefix TLV Grouping";
  }

  grouping ipv6-link-local-tlv {
    container ipv6-link-local-tlv {
      description "IPv6 Link-Local LSA TLV";
      leaf ipv6-link-local-tlv-length {
        type uint16;
        description
          "IPv6 Link-Local TLV Length - Variable dependent
           on sub-TLVs";
      }
      leaf link-local-address {
        type inet:ipv6-address;
        description
          "IPv6 Link Local address";
      }
      list sub-tlvs {
        description "IPv6 Link Local TLV Sub-TLVs";
        uses unknown-sub-tlv;
      }
    }
    description "IPv6 Link-Local TLV Grouping";
  }

  grouping ipv4-link-local-tlv {
    container ipv4-link-local-tlv {
      description "IPv6 Link-Local LSA TLV";
      leaf ipv4-link-local-tlv-length {
        type uint16;
        description
          "IPv4 Link-Local TLV Length - Variable dependent
           on sub-TLVs";
      }
      leaf link-local-address {
        type inet:ipv4-address;
        description
          "IPv4 Link Local address";
      }
      list sub-tlvs {
        description "IPv4 Link Local TLV Sub-TLVs";
        uses unknown-sub-tlv;
      }
    }
    description "IPv4 Link-Local TLV Grouping";
  }

  grouping ospfv3-e-lsa-body {
    description "OSPFv3 Extended LSA body.";
    container e-router {
      when  "derived-from(../../ospf:header/ospf:type, "
        + "'ospfv3-e-router-lsa')" {
        description "Only valid for OSPFv3 Extended-Router LSAs";
      }
      description "OSPv3 Extended Router LSA";
      uses ospf:ospf-router-lsa-bits;
      uses ospf:ospfv3-lsa-options;

      list e-router-tlvs {
        description "E-Router LSA TLVs";
        container unknown-tlv {
          uses ospf:tlv;
          description "Unknown E-Router TLV";
        }
        container link-tlv {
          description "E-Router LSA TLV";
          leaf link-tlv-length {
            type uint16;
            description
              "Link TLV Length - Variable dependent on sub-TLVs";
          }
          leaf interface-id {
            type uint32;
            description "Interface ID for link";
          }
          leaf neighbor-interface-id {
            type uint32;
            description "Neighbor's Interface ID for link";
          }
          leaf neighbor-router-id {
            type rt-types:router-id;
            description "Neighbor's Router ID for link";
          }
          leaf type {
            type uint8;
            description "Link type: 1 - Point-to-Point Link
                                    2 - Transit Network Link
                                    3 - Stub Network Link Link
                                    4 - Virtual Link";
          }
          leaf metric {
            type uint16;
              description "Link Metric";
          }
          list sub-tlvs {
            description "Link TLV Sub-TLVs";
            uses unknown-sub-tlv;
          }
        }
      }
    }

    container e-network {
      when "derived-from(../../ospf:header/ospf:type, "
         + "'ospfv3-e-network-lsa')" {
        description
          "Only applies to E-Network LSAs.";
      }
      description "Extended Network LSA";
      uses ospf:ospfv3-lsa-options;
      list e-network-tlvs {
        description "E-Network LSA TLVs";
        container unknown--tlv {
          uses ospf:tlv;
          description "Unknown E-Network TLV";
        }
        container attached-router-tlv {
          description "Attached Router TLV";
          leaf attached-router-tlv-length {
            type uint16;
            description
              "Attached Router TLV Length - Variable dependent
               on sub-TLVs";
          }
          leaf Adjacent-neighbor-router-id {
            type rt-types:router-id;
            description "Adjacent Neighbor's Router ID";
          }
          list sub-tlvs {
            description "Attached Router TLV Sub-TLVs";
            uses unknown-sub-tlv;
          }
        }
      }
    }

    container e-inter-area-prefix {
      when "derived-from(../../ospf:header/ospf:type, "
         + "'ospfv3-e-inter-area-prefix-lsa')" {
        description
          "Only applies to E-Inter-Area-Prefix LSAs.";
      }
      description "Extended Inter-Area Prefix LSA";
      list e-inter-prefix-tlvs {
        description "E-Inter-Area-Prefix LSA TLVs";
        container unknown--tlv {
          uses ospf:tlv;
          description "Unknown E-Inter-Area-Prefix TLV";
        }
        container inter-prefix-tlv {
          description "Unknown E-Inter-Area-Prefix LSA TLV";
          leaf inter-prefix-tlv-length {
            type uint16;
            description
              "Inter-Area-Prefix TLV Length - Variable dependent
               on sub-TLVs";
          }
          leaf metric {
            type rt-types:uint24;
              description "Inter-Area Prefix Metric";
          }
          uses ospfv3-lsa-prefix;
          list sub-tlvs {
            description "Inter-Area Prefix TLV Sub-TLVs";
            uses unknown-sub-tlv;
          }
        }
      }
    }

    container e-inter-area-router {
      when "derived-from(../../ospf:header/ospf:type, "
         + "'ospfv3-e-inter-area-router-lsa')" {
        description
          "Only applies to E-Inter-Area-Router LSAs.";
      }
      description "Extended Inter-Area Router LSA";
      list e-inter-router-tlvs {
        description "E-Inter-Area-Router LSA TLVs";
        container unknown-tlv {
          uses ospf:tlv;
          description "Unknown E-Inter-Area-Router TLV";
        }
        container inter-router-tlv {
          description "Unknown E-Inter-Area-Router LSA TLV";
          leaf inter-router-tlv-length {
            type uint16;
            description
              "Inter-Area-Router TLV Length - Variable dependent
               on sub-TLVs";
          }
          uses ospf:ospf-router-lsa-bits;
          uses ospf:ospfv3-lsa-options;
          leaf metric {
            type rt-types:uint24;
              description "Inter-Area Router Metric";
          }
          leaf destination-router-id {
            type rt-types:router-id;
            description "Destination Router ID";
          }
          list sub-tlvs {
            description "Inter-Area Router TLV Sub-TLVs";
            uses unknown-sub-tlv;
          }
        }
      }
    }

    container e-as-external {
      when "derived-from-or-self(../../ospf:header/ospf:type, "
         + "'ospfv3-e-as-external-lsa')" {
        description
          "Only applies to E-AS-external LSAs.";
      }
      list e-external-tlvs {
        description "E-External LSA TLVs";
        container unknown-tlv {
          uses ospf:tlv;
          description "Unknown E-External TLV";
        }
        uses external-prefix-tlv;
      }
      description "E-AS-External LSA.";
    }

    container e-nssa {
      when "derived-from-or-self(../../ospf:header/ospf:type, "
         + "'ospfv3-e-nssa-lsa')" {
        description
          "Only applies to E-NSSA LSAs.";
      }
      list e-external-tlvs {
        description "E-NSSA LSA TLVs";
        container unknown-tlv {
          uses ospf:tlv;
          description "Unknown E-External TLV";
        }
        uses external-prefix-tlv;
      }
      description "E-NSSA LSA.";
    }

    container e-link {
      when "derived-from-or-self(../../ospf:header/ospf:type, "
         + "'ospfv3-e-link-lsa')" {
        description
          "Only applies to Extended Link LSAs.";
      }
      description "E-Link LSA";
      leaf rtr-priority {
        type uint8;
        description "Router Priority for the interface.";
      }
      uses ospf:ospfv3-lsa-options;
      list e-link-tlvs {
        description "E-Link LSA TLVs";
        container unknown-tlv {
          uses ospf:tlv;
          description "Unknown E-Link TLV";
        }
        uses intra-area-prefix-tlv;
        uses ipv6-link-local-tlv;
        uses ipv4-link-local-tlv;
      }
    }

    container e-intra-area-prefix {
      when "derived-from-or-self(../../ospf:header/ospf:type, "
         + "'ospfv3-e-intra-area-prefix-lsa')" {
        description
          "Only applies to E-Intra-Area-Prefix LSAs.";
      }
      description "E-Intra-Area-Prefix LSA";
      leaf referenced-ls-type {
        type uint16;
        description "Referenced Link State type";
      }
      leaf referenced-link-state-id {
        type uint32;
        description
          "Referenced Link State ID";
      }
      leaf referenced-adv-router {
        type rt-types:router-id;
        description
          "Referenced Advertising Router";
      }
      list e-intra-prefix-tlvs {
        description "E-Intra-Area-Prefix LSA TLVs";
        container unknown-tlv {
          uses ospf:tlv;
          description "Unknown E-Intra-Area-Prefix TLV";
        }
        uses intra-area-prefix-tlv;
      }
    }
  }

  /* Configuration */
  augment "/rt:routing/rt:control-plane-protocols"
        + "/rt:control-plane-protocol/ospf:ospf" {
     when "/rt:routing/rt:control-plane-protocols"
        + "/rt:control-plane-protocol/rt:type = 'ospf:ospfv3'"  {
      description
        "This augments the OSPFv3 routing protocol when used.";
    }
    description
      "This augments the OSPFv3 protocol configuration
       with segment routing.";
    leaf extended-lsa-support {
      if-feature extended-lsa-support;
      type boolean;
      default false;
      description
        "Enable OSPFv3 Extended LSA Support for the OSPFv3
         domain";
    }
  }

  augment "/rt:routing/rt:control-plane-protocols/"
    + "rt:control-plane-protocol/ospf:ospf/ospf:areas/ospf:area" {
    when "'ospf:../../../../../rt:type' = 'ospf:ospfv3'" {
      description
        "This augments the OSPFv3 area configuration
         when used.";
    }
    description
      "This augments the OSPFv3 protocol area
       configuration with Extend LSA support";
    leaf extended-lsa-support {
      if-feature extended-lsa-support;
      type boolean;
      default false;
      description
        "Enable OSPFv3 Extended LSA Support for the OSPFv3 area";
    }
  }

  /*
   * Link State Database (LSDB) Augmentations
  */
  augment "/rt:routing/"
    + "rt:control-plane-protocols/rt:control-plane-protocol/"
    + "ospf:ospf/ospf:areas/ospf:area/"
    + "ospf:interfaces/ospf:interface/ospf:database/"
    + "ospf:link-scope-lsa-type/ospf:link-scope-lsas/"
    + "ospf:link-scope-lsa/ospf:version/ospf:ospfv3/"
    + "ospf:ospfv3/ospf:body" {
    when "/rt:routing/rt:control-plane-protocols"
        + "/rt:control-plane-protocol/rt:type = 'ospf:ospfv3'"  {
      description
        "This augmentation is only valid for OSPFv3.";
    }
    description
      "OSPFv3 Link-Scoped Extended LSAs";
  }

  augment "/rt:routing/"
    + "rt:control-plane-protocols/rt:control-plane-protocol/"
    + "ospf:ospf/ospf:areas/ospf:area/ospf:database/"
    + "ospf:area-scope-lsa-type/ospf:area-scope-lsas/"
    + "ospf:area-scope-lsa/ospf:version/ospf:ospfv3/"
    + "ospf:ospfv3/ospf:body" {
    when "../../../../../../../../../"
      + "rt:type = 'ospf:ospfv3'" {
      description
        "This augmentation is only valid for OSPFv3
         E-Router LSAs";
    }
    uses ospfv3-e-lsa-body;
    description
      "OSPFv3 Area-Scoped Extended LSAs";
  }
  augment "/rt:routing/"
    + "rt:control-plane-protocols/rt:control-plane-protocol/"
    + "ospf:ospf/ospf:database/"
    + "ospf:as-scope-lsa-type/ospf:as-scope-lsas/"
    + "ospf:as-scope-lsa/ospf:version/ospf:ospfv3/"
    + "ospf:ospfv3/ospf:body" {
    when "'ospf:../../../../../../../../../"
      + "rt:type' = 'ospf:ospfv3'" {
      description
        "This augmentation is only valid for OSPFv3.";
    }
    uses ospfv3-e-lsa-body;
    description
      "OSPFv3 AS-Scoped Extended LSAs";
  }
}
<CODE ENDS>
      ]]></artwork>
    </figure>
  </t>      
  </section>

    <!-- Possibly a 'Contributors' section ... -->

    <section anchor="Security" title="Security Considerations">
    <t>The YANG modules specified in this document define a schema for 
       data that is designed to be accessed via network
       management protocols such as NETCONF <xref target="RFC6241"/> or
       RESTCONF <xref target="RFC8040"/>. The lowest NETCONF layer is the secure transport
       layer, and the mandatory-to-implement secure transport is Secure Shell (SSH)
       <xref target="RFC6242"/>. The lowest RESTCONF layer is HTTPS, and the
       mandatory-to-implement secure transport is TLS <xref target="RFC5246"/>.</t>

   <t>The NETCONF access control model <xref target="RFC6536"/> provides the 
      means to restrict access for particular NETCONF or RESTCONF users to a
      pre-configured subset of all available NETCONF or RESTCONF protocol 
      operations and content.</t>

   <t>There are a number of data nodes defined in ietf-ospfv3-extended-lsa.yang module
      that are writable/creatable/deletable (i.e., config true, which is the default). 
      These data nodes may be considered sensitive or vulnerable in some network 
      environments. Write operations (e.g., edit-config) to these data nodes without 
      proper protection can have a negative effect on network operations. For OSPFv3
      Extended LSAs, the ability to disable OSPFv3 Extended LSA support result in a
      denial of service.</t>  

   <t>Some of the readable data nodes in the ietf-ospfv3-extended-lsa.yang module
      may be considered sensitive or vulnerable in some network environments. It is thus 
      important to control read access (e.g., via get, get-config, or notification)
      to these data nodes. The exposure of the Link State Database (LSDB) will
      expose the detailed topology of the network. This may be undesirable since
      both due to the fact that exposure may facilitate other attacks. Additionally, 
      network operators may consider their topologies to be sensitive confidential
      data.</t>

   </section>
<section title="IANA Considerations">
<t>This document registers a URI in the IETF XML registry 
   <xref target="RFC3688"/>.  Following the format in <xref target="RFC3688"/>, 
   the following registration is requested to be made:
   <figure>
   <artwork>  
   URI: urn:ietf:params:xml:ns:yang:ietf-ospfv3-extended-lsa
   Registrant Contact: The IESG.
   XML: N/A, the requested URI is an XML namespace.
   </artwork> 
   </figure></t>
   <t>This document registers a YANG module in the YANG Module Names
   registry <xref target="RFC6020"/>.
   <figure>
   <artwork>  
   name: ietf-ospfv3-extended-lsa
   namespace: urn:ietf:params:xml:ns:yang:ietf-ospfv3-extended-lsa
   prefix: ospfv3-e-lsa
   reference: RFC XXXX
   </artwork> 
   </figure></t>
</section>
    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>This document was produced using Marshall Rose's xml2rfc tool.</t>
      <t>The YANG model was developed using the suite of YANG tools written 
         and maintained by numerous authors.</t>
    </section>   
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <!-- References split into informative and normative -->

    <!-- There are 2 ways to insert reference entries from the citation libraries:
     1. define an ENTITY at the top, and use "ampersand character"RFC2629; here (as shown)
     2. simply use a PI "less than character"?rfc include="reference.RFC.2119.xml"?> here
        (for I-Ds: include="reference.I-D.narten-iana-considerations-rfc2434bis.xml")

     Both are cited textually in the same manner: by using xref elements.
     If you use the PI option, xml2rfc will, by default, try to find included files in the same
     directory as the including file. You can also define the XML_LIBRARY environment variable
     with a value containing a set of directories to search.  These can be either in the local
     filing system or remote ones accessed by http (http://domain/dir/... ).-->

    <references title="Normative References">
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->
      &RFC2119;
      &RFC3688;
      &RFC5246;
      &RFC5340;
      &RFC6020;
      &RFC6241;
      &RFC6242;
      &RFC6536;
      &RFC7950;
      &RFC8022;
      &RFC8040;
      &RFC8349;
      &RFC8362;
    </references>
    <references title="Informative References">
      <!-- Here we use entities that we defined at the beginning. -->
      &I-D.ietf-ospf-yang;
    </references>

  </back>
</rfc>
